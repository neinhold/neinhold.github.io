{"version":3,"sources":["hax_big.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","serverUrl","replayUrl","App","props","state","curlink","stats","replayInfo","chatLogs","chatLog","playerClicked","playerTabs","playerHeatmaps","playerHeatmapsLoaded","playerHeatmapsMaxvalue","selectedStat","value","label","hideplayerstats","replaydisplaycount","axios","get","then","response","url","data","setState","getJsonl","array","sort","reverse","updateDimensions","bind","componentDidMount","onSelect","path","jsonArray","parseJsonl","sortByProperty","i","length","calculatePlayerStats","includes","ms","totalSeconds","Math","floor","hours","minutes","date","Date","parseInt","curDate","diff","dateString","toISOString","substring","timeString","property","a","b","aF","parseFloat","bF","this","tab","tabClasses","onClick","tabClicked","className","heatmap","auth","style","visible","maxValue","totalValue","x","y","dataPoint","push","index","heatmapInstance","h337","create","container","document","querySelector","radius","maxOpacity","minOpacity","blur","min","max","setData","num","abs","sign","toFixed","player","cleansheetrate","gkcleansheetcount","gkmatchcount","winrate1v1","total1v1wincount","total1v1count","distancepergame","totaldistancecovered","stats2matchcount","concededpergame","gkconcededcount","winrate","totalwincount","totalmatchcount","lossrate","totallosscount","goalspergame","totalscorecount","assistspergame","totalassistcount","scorerpointspergame","cleansheetmultiplier","cleansheetaddition","concededmultiplier","defenserating","offensemultiplier","offenseadditionmultiplier","weightedscorerpoints","offenserating","gkpercentage","winrateweighting","weighteddefenserating","weightedoffenserating","rating","renderTabs","lastname","kFormatter","hattrickcount","unstoppablecount","dominatingcount","loadHeatmap","self","setTimeout","generateHeatMap","src","hax_big","renderHeatmap","msToString","totalplaytime","msToElapsedSince","lastplayed","printvalue","id","window","open","selected","placeholderClassName","controlClassName","menuClassName","options","onChange","placeholder","option","file","name","href","target","addEventListener","width","innerWidth","height","innerHeight","fixedHeight","hideplayerstatsstring","exact","rel","map","renderChatLog","renderDropDown","renderPlayerStats","replay","renderReplayInfo","component","match","params","location","padWithZeros","React","Component","IdHandler","isHelp","analyticsstats","isNaN","replayTitle","log","curStats","message","type","names","goals","assists","wins","matches","losses","i1","indexOf","i2","substr","a1","assistname","info","getReplayInfo","redplayers","blueplayers","checkForAuth","scorered","scoreblue","ir","ib","console","newtotalscorecount","newtotalwincount","newtotallosscount","newtotalmatchcount","newtotalassistcount","newstats","newI","string","convertToLogDataStats","logStatsToFile","key","toLowerCase","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","setRequestHeader","send","dict","chatString","timeStamp","toLocaleString","renderMessage","Help","commands","title","syntax","admin","command","titleClass","renderSyntax","renderCommand","jsonl","lineArray","split","slice","json","JSON","parse","s","displaycount","ReplayInfo","curTab","heatmaps","blueHeatMap","isLoaded","team","xCoord","yCoord","tabs","gradient","start","range","curVisibility","visibility","color","toggleHeatMap","gks","containerName","stadium","sToString","duration","modifiers","renderModifiers","checkForGk","renderToggle","withRouter","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e9be6155.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hax_big.b0ca6dfe.svg\";","import React from 'react';\nimport hax_big from './hax_big.svg';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter, useParams, useRouteMatch } from \"react-router-dom\";\nimport h337 from \"heatmap.js\";\n\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './App.css';\n\nvar serverUrl = 'https://lively-scene-db1a.neinhold.workers.dev/?http://85.159.209.166.nip.io/';\nvar replayUrl = 'http://www.haxball.com/replay?v=3#http://85.159.209.166/replays/';\nvar replaySourceUrl = 'http://85.159.209.166/replays/';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      curlink: \"\",\n      stats: [],\n      replayInfo: [],\n      chatLogs: [],\n      chatLog: [],\n      playerClicked: {},\n      playerTabs: {},\n      playerHeatmaps: {},\n      playerHeatmapsLoaded: {},\n      playerHeatmapsMaxvalue: {},\n      selectedStat: {value: \"totalmatchcount\",label: \"Games Played\"},\n      hideplayerstats: true,\n      replaydisplaycount: 50,\n    }\n\n    //axios.defaults.headers.common['Cache-Control'] = 'no-cache';\n    let config = {\n      headers: {\n        \"Cache-Control\": 'no-cache',\n      }\n    }\n\n    axios.get(serverUrl + \"data/url.txt\")\n    .then(response => {\n      let url = response.data;\n      this.state.curlink = url;\n      //FORCE UPDATE STATE\n      this.setState({curlink: this.state.curlink})\n    });\n\n    this.getJsonl(\"data/stats\");\n    this.getJsonl(\"data/replayInfo\");\n\n    axios.get(serverUrl + \"chatlogs/\")\n    .then(response => {\n      let array = response.data;\n      //array.reverse();\n      array = array.sort();\n      array = array.reverse();\n      this.state.chatLogs = array;\n      //FORCE UPDATE STATE\n      this.setState({curlink: this.state.curlink})\n    });\n\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n\n  }\n\n  getJsonl(path){\n    let url = serverUrl + path + \".jsonl\";\n    axios.get(url)\n    .then(response => {\n      let jsonArray = [response.data];\n      if(typeof response.data === 'string'){\n        jsonArray = parseJsonl(response.data);\n      }\n      if(path == \"data/stats\"){\n        jsonArray.sort(this.sortByProperty(\"totalmatchcount\"));\n        this.state.stats = jsonArray;\n        for(var i = 0; i < this.state.stats.length; i++){\n          this.calculatePlayerStats(this.state.stats[i]);\n        }\n      }\n      if(path == \"data/replayInfo\"){\n        jsonArray.sort(this.sortByProperty(\"id\"));\n        this.state.replayInfo = jsonArray;\n      }\n      if(path.includes(\"chatlogs/\")){\n        this.state.chatLog = jsonArray;\n      }\n      //FORCE UPDATE STATE\n      this.setState({curlink: this.state.curlink})\n    });\n  }\n\n\n\n  msToString(ms){\n    var totalSeconds =  Math.floor(ms / 1000);\n    var hours = Math.floor(totalSeconds / 3600);\n    var minutes = Math.floor((totalSeconds - (hours*3600)) / 60);\n    var seconds = totalSeconds - (hours*3600) - (minutes * 60);\n    var timeString = hours + \"h\" + minutes + \"m\" + seconds + \"s\";\n    return timeString;\n  }\n\n  msToElapsedSince(ms){\n    var date = new Date(parseInt(ms));\n    var curDate = new Date();\n    var elapsed = curDate - date;\n    var diff =  Math.floor(( curDate - date ) / 86400000);\n    let dateString = date.toISOString().substring(0, 10);\n    let curDateString = curDate.toISOString().substring(0, 10);\n    var timeString = diff + \" days ago\";\n    if(diff == 1 || diff == 0){ timeString = \"1 day ago\";}\n    if(curDateString == dateString){ timeString = \"Today\";}\n    if(ms == 0){ timeString = \"n/a\";}\n    return timeString;\n  }\n\n\n  sortByProperty(property){\n     return function(a,b){\n       let aF = parseFloat(a[property]);\n       let bF = parseFloat(b[property]);\n        if(aF < bF)\n           return 1;\n        else if(aF > bF)\n           return -1;\n\n        return 0;\n     }\n  }\n\n  playerClicked(i){\n    this.state.playerClicked[i] = !this.state.playerClicked[i];\n    this.state.playerTabs[i] = 0;\n    this.state.playerHeatmapsLoaded[i] = false;\n    this.setState({playerClicked: this.state.playerClicked});\n  }\n\n  tabClicked(i, tab){\n    this.state.playerTabs[i] = tab;\n    this.state.playerHeatmapsLoaded[i] = false;\n    this.setState({playerTabs: this.state.playerTabs});\n  }\n\n  renderTabs(i){\n    let tabClasses = [\"Tab Tri\", \"Tab Tri\", \"Tab Tri\"];\n    tabClasses[this.state.playerTabs[i]] += \" Selected\";\n\n\n    return(\n      <div>\n        <div onClick={() => this.tabClicked(i, 0)} className={tabClasses[0]}>\n          Stats\n        </div>\n        <div onClick={() => this.tabClicked(i, 1)} className={tabClasses[1]}>\n          More\n        </div>\n        <div onClick={() => this.tabClicked(i, 2)} className={tabClasses[2]}>\n          Heatmap\n        </div>\n      </div>\n    )\n\n  }\n\n  renderHeatmap(heatmap,auth){\n\n    return(\n      <div className = \"HeatmapContainer\">\n        <div style={{ 'height': 133}} className={\"Heatmap\" + auth}>\n        </div>\n      </div>\n    )\n  }\n\n  loadHeatmap(auth, i){\n    let url = serverUrl + \"heatmaps/players/\" + auth + \".json\";\n    axios.get(url)\n    .then(response => {\n      let jsonArray = [response.data];\n\n      jsonArray = jsonArray[0];\n\n\n      let data = {\n        heatmap: [],\n        visible: true\n      };\n      let maxValue = 1;\n      let totalValue = 0;\n      for(var x = 0; x < jsonArray.length; x++){\n        for(var y = 0; y < jsonArray[x].length; y++){\n          let xCoord = x * 6.5;\n          let yCoord = y * 3.7666;\n          let dataPoint = {\n            x: xCoord,\n            y: yCoord,\n            value: jsonArray[x][y]+1\n            //value: Math.min(jsonArray[i].heatmap[x][y] +1, 3)\n          }\n          data.heatmap.push(dataPoint);\n          totalValue += dataPoint.value;\n          if(dataPoint.value > maxValue){\n            maxValue = dataPoint.value;\n          }\n        }\n      }\n\n      this.state.playerHeatmaps[i] = data;\n      //console.log(\"MAXVALUE: \" + maxValue);\n      maxValue = (totalValue / (jsonArray.length * jsonArray[0].length)) * 3;\n      //console.log(\"MAXVALUE: \" + maxValue);\n      this.state.playerHeatmapsMaxvalue[i] = maxValue;\n      this.setState({playerHeatmaps: this.state.playerHeatmaps});\n      //console.log(data);\n\n\n    });\n  }\n\n  generateHeatMap(auth, index){\n    let heatmap = this.state.playerHeatmaps[index].heatmap;\n    //console.log(\"GENERATING HEATMAP FOR \" + auth);\n    //console.log(heatmap);\n\n\n    let gradient = {\n        '.5': \"rgb(32, 85, 153)\",\n        '.8': \"rgb(0, 255, 191)\",\n        '.95':\"rgb(232, 102, 102)\"\n      };\n\n\n\n    var heatmapInstance = h337.create({\n      container: document.querySelector('.Heatmap'+auth),\n      radius: 8,\n      maxOpacity: .5,\n      minOpacity: 0,\n      blur: .75,\n    });\n    var data = {\n      min: 1,\n      max: this.state.playerHeatmapsMaxvalue[index],\n      data: heatmap\n    };\n    heatmapInstance.setData(data);\n  }\n\n  kFormatter(num) {\n    return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000).toFixed(1)) + 'k' : Math.sign(num)*Math.abs(num)\n  }\n\n\n  calculatePlayerStats(player){\n    player.cleansheetrate = parseInt(Math.floor((player.gkcleansheetcount/player.gkmatchcount).toFixed(2) * 100) || 0);\n    player.winrate1v1 = parseInt(Math.floor((player.total1v1wincount/player.total1v1count).toFixed(2) * 100) || 0);\n    player.distancepergame = parseInt(player.totaldistancecovered / player.stats2matchcount || 0);\n    player.concededpergame = (player.gkconcededcount / player.gkmatchcount || 0);\n\n    player.winrate = parseInt(Math.floor((player.totalwincount/player.totalmatchcount).toFixed(2) * 100) || 0);\n    player.lossrate = parseInt(Math.floor((player.totallosscount/player.totalmatchcount).toFixed(2) * 100) || 0);\n    player.goalspergame = (player.totalscorecount / player.totalmatchcount || 0);\n    player.assistspergame = (player.totalassistcount / player.totalmatchcount || 0);\n    player.scorerpointspergame = (parseFloat(player.goalspergame) + parseFloat(player.assistspergame));\n\n    //TEMP FIX UNTIL SERVERSIDE UPDATE\n    //player.hattrickcount -= parseInt(player.unstoppablecount);\n    //player.unstoppablecount -= parseInt(player.dominatingcount);\n    //FIXED\n\n    let cleansheetmultiplier = Math.max(0, 1.0 - (player.concededpergame - 0.7));\n    let cleansheetaddition = Math.min(100, player.cleansheetrate + (50 * cleansheetmultiplier));\n\n    let concededmultiplier = Math.min(1.0, Math.max(0,player.concededpergame-0.5) / 4.5);\n    let concededmax = Math.min(1, player.concededpergame);\n    let defenserating = 100 - (concededmax * (100-cleansheetaddition) + (cleansheetaddition*concededmultiplier));\n    player.defenserating = parseInt(defenserating);\n\n    if(player.gkmatchcount < 10){\n      player.defenserating = 0;\n    }\n    let offensemultiplier = player.scorerpointspergame+0.5;\n    let offenseadditionmultiplier = Math.min(1.0,Math.max(0, offensemultiplier - 1.0));\n    offensemultiplier = Math.min(1, offensemultiplier);\n\n    let weightedscorerpoints = 0.95 * Math.min(1,player.scorerpointspergame/0.95);\n    weightedscorerpoints = weightedscorerpoints + (Math.max(0,player.scorerpointspergame - 1.0)*0.05);\n\n    let offenserating = weightedscorerpoints * offensemultiplier;\n    let offenseaddition = (1.0 - offenserating) * offenseadditionmultiplier;\n    offenserating = offenserating + offenseaddition;\n    player.offenserating = parseInt(offenserating*100);\n\n    if(player.totalmatchcount < 30){\n      player.offenserating = 0;\n    }\n\n    let gkpercentage = player.gkmatchcount / player.stats2matchcount;\n    if(player.gkmatchcount == 0){gkpercentage = 0;}\n    gkpercentage = gkpercentage / 0.8;\n\n    let winrateweighting = ((player.winrate/100) / 0.70)/2 + 0.6;\n    let weighteddefenserating = player.defenserating * gkpercentage;\n    if(player.defenserating == 0){weighteddefenserating = 0;}\n    let weightedoffenserating = player.offenserating * (1-gkpercentage);\n    player.rating = parseInt(Math.min(100,(weighteddefenserating + weightedoffenserating) * winrateweighting));\n    if(player.defenserating == 0){\n      player.rating = Math.max(0,player.rating - 5);\n    }\n    //console.log(player.lastname + \": \" + player.stats2matchcount + \" - \" + gkpercentage + \" - \" + player.defenserating*gkpercentage + \" - \" + winrateweighting);\n  }\n\n  renderPlayerStats(player,i){\n    if(player.auth == \"HOST_AUTH\"){\n      return(<div/>);\n    }\n\n    if(!(i in this.state.playerClicked)){\n      this.state.playerClicked[i] = false;\n    }\n\n    //HIDE CERTAIN PLAYERS\n    if(player.stats2matchcount == 0){\n      return;\n    }\n    if(this.state.hideplayerstats){\n      if(player.totalmatchcount <= 50){\n        return;\n      }\n    }\n\n    if(this.state.playerClicked[i]){\n\n\n      if(this.state.playerTabs[i] == 1){\n        return(\n          <div className=\"Container Click\">\n            {this.renderTabs(i)}\n            <div onClick={() => this.playerClicked(i)}>\n            <div className=\"InfoTitle\">\n            {player.lastname}\n            </div>\n\n            <div className=\"PlayerStatsGames\">\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Offense Rating\n                </div>\n                <div className=\"SmallDigit\">\n                {player.offenserating == 0 ? \"n/a\" : player.offenserating}\n                </div>\n              </div>\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Rating\n                </div>\n                <div className=\"BigDigit\">\n                {player.rating == 0 ? \"n/a\" : player.rating}\n                </div>\n              </div>\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Defense Rating\n                </div>\n                <div className=\"SmallDigit\">\n                {player.defenserating == 0 ? \"n/a\" : player.defenserating}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"PlayerStatsGames\">\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Games as GK\n                </div>\n                <div className=\"SmallDigit\">\n                {player.gkmatchcount}\n                </div>\n                <hr/>\n                <div className=\"SmallDigitSmall\">\n                {player.gkconcededcount}\n                </div>\n                <div className=\"SubTitle\">\n                goals conceded\n                </div>\n              </div>\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Clean Sheets\n                </div>\n                <div className=\"SmallDigit\">\n                {player.gkcleansheetcount}\n                </div>\n                <hr/>\n                <div className=\"SmallDigitSmall\">\n                {player.cleansheetrate + \"%\"}\n                </div>\n                <div className=\"SubTitle\">\n                clean sheets\n                </div>\n              </div>\n\n              </div>\n              <div className=\"PlayerStatsGames\">\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                1v1s\n                </div>\n                <div className=\"SmallDigit\">\n                {player.total1v1count}\n                </div>\n                <hr/>\n                <div className=\"SmallDigitSmall\">\n                {player.winrate1v1 + \"%\"}\n                </div>\n                <div className=\"SubTitle\">\n                won\n                </div>\n              </div>\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Distance\n                </div>\n                <div className=\"SmallDigit\">\n                {this.kFormatter(player.totaldistancecovered)}\n                </div>\n                <hr/>\n                <div className=\"SmallDigitSmall\">\n                {player.distancepergame + \"m\"}\n                </div>\n                <div className=\"SubTitle\">\n                per game\n              </div>\n              </div>\n\n              <div className=\"PlayerStatsGames\">\n                <div className=\"InfoBox\">\n                  <div className=\"InfoPlainTitle\">\n                  Hattricks\n                  </div>\n                  <div className=\"SmallDigit\">\n                  {player.hattrickcount}\n                  </div>\n                </div>\n                <div className=\"InfoBox\">\n                  <div className=\"InfoPlainTitle\">\n                  4 goals\n                  </div>\n                  <div className=\"SmallDigit\">\n                  {player.unstoppablecount}\n                  </div>\n                </div>\n                <div className=\"InfoBox\">\n                  <div className=\"InfoPlainTitle\">\n                  5 goals\n                  </div>\n                  <div className=\"SmallDigit\">\n                  {player.dominatingcount}\n                  </div>\n                </div>\n              </div>\n\n\n            </div>\n            </div>\n          </div>\n        )\n      }\n      else if(this.state.playerTabs[i] == 2){\n        if(!this.state.playerHeatmaps[i]){\n\n          this.loadHeatmap(player.auth,i);\n\n          return(\n            <div  className={\"Container Click\"}>\n\n              {this.renderTabs(i)}\n              <div onClick={() => this.playerClicked(i)}>\n              <div className=\"InfoTitle\">\n              {player.lastname}\n              </div>\n              <div className={\"Subtitle\"}>\n                No Heatmap available for this player.\n              </div>\n              </div>\n\n            </div>\n          )\n\n        }else if(!this.state.playerHeatmapsLoaded[i]){\n          let self = this;\n          setTimeout(function() {\n            self.generateHeatMap(player.auth, i);\n            self.state.playerHeatmapsLoaded[i] = true;\n          }, 500);\n        }\n\n\n\n          return(\n            <div  className={\"Container Click\"}>\n\n              {this.renderTabs(i)}\n              <div onClick={() => this.playerClicked(i)}>\n              <div className=\"InfoTitle\">\n              {player.lastname}\n              </div>\n              <div className={\"Heatmap\"}>\n                <img className=\"Stadium\" src={hax_big}/>\n                {this.renderHeatmap(this.state.playerHeatmaps[i], player.auth)}\n\n              </div>\n              </div>\n\n            </div>\n          )\n\n      }else{\n        return(\n          <div className=\"Container Click\">\n            {this.renderTabs(i)}\n            <div onClick={() => this.playerClicked(i)}>\n            <div className=\"InfoTitle\">\n            {player.lastname}\n            </div>\n            <div className=\"InfoPlainTitle\">\n            Games played\n            </div>\n            <div className=\"BigDigit\">\n            {player.totalmatchcount}\n            </div>\n            <div className=\"PlayerStatsGames\">\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Wins\n                </div>\n                <div className=\"SmallDigit\">\n                {player.totalwincount}\n                </div>\n                <hr/>\n                <div className=\"SmallDigitSmall\">\n                {player.winrate + \"%\"}\n                </div>\n                <div className=\"SubTitle\">\n                won\n                </div>\n              </div>\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Losses\n                </div>\n                <div className=\"SmallDigit\">\n                {player.totallosscount}\n                </div>\n                <hr/>\n                <div className=\"SmallDigitSmall\">\n                {player.lossrate + \"%\"}\n                </div>\n                <div className=\"SubTitle\">\n                lost\n                </div>\n              </div>\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Goals\n                </div>\n                <div className=\"SmallDigit\">\n                {player.totalscorecount}\n                </div>\n                <hr/>\n                <div className=\"SmallDigitSmall\">\n                {player.goalspergame.toFixed(2)}\n                </div>\n                <div className=\"SubTitle\">\n                per game\n                </div>\n              </div>\n              <div className=\"InfoBox\">\n                <div className=\"InfoPlainTitle\">\n                Assists\n                </div>\n                <div className=\"SmallDigit\">\n                {player.totalassistcount}\n                </div>\n                <hr/>\n                <div className=\"SmallDigitSmall\">\n                {player.assistspergame.toFixed(2)}\n                </div>\n                <div className=\"SubTitle\">\n                per game\n                </div>\n              </div>\n              <div className=\"InfoPlainTitle\">\n              Total time played\n              </div>\n              <div className=\"SmallDigit\">\n              {this.msToString(player.totalplaytime)}\n              </div>\n              <div className=\"InfoPlainTitle\">\n              Last played\n              </div>\n              <div className=\"SmallDigit\">\n              {this.msToElapsedSince(player.lastplayed)}\n              </div>\n            </div>\n            </div>\n          </div>\n        )\n      }\n    }\n\n    else {\n\n      let printvalue = player[this.state.selectedStat.value];\n      if(printvalue % 1 != 0){\n        printvalue = printvalue.toFixed(2);\n      }\n      if(this.state.selectedStat.value.includes(\"rating\")){\n        printvalue = printvalue == 0 ? \"n/a\" : printvalue;\n      }\n\n      return(\n\n        <div onClick={() => this.playerClicked(i)} className=\"Container Click\">\n\n        <div className=\"TextLeft\">\n        {player.lastname}\n        </div>\n        <div className=\"TextRight\">\n        {printvalue}\n        </div>\n        </div>\n      )\n    }\n\n  }\n\n  goToReplay(id){\n    let url = replayUrl + id + \".hbr2\";\n    window.open(url, \"_blank\");\n  }\n\n\n  renderDropDown(){\n\n    let options = [\n      {value: \"totalmatchcount\",label: \"Games Played\"},\n      {value: \"rating\",label:\"Rating\"},\n      {value: \"offenserating\",label:\"Offense Rating\"},\n      {value: \"defenserating\",label:\"Defense Rating\"},\n      {value: \"totalscorecount\",label:\"Goals\"},\n      {value: \"totalassistcount\",label:\"Assists\"},\n      {value: \"goalspergame\",label:\"Goals Per Game\"},\n      {value: \"assistspergame\",label:\"Assists Per Game\"},\n      {value: \"winrate\",label:\"Winrate\"},\n      //{value: \"totalplaytime\",label:\"Playtime\"},\n      {value: \"gkmatchcount\",label:\"Games as GK\"},\n      {value: \"gkcleansheetcount\",label:\"Clean Sheets\"},\n      {value: \"concededpergame\",label:\"Goals Conceded Per Game\"},\n      {value: \"cleansheetrate\",label:\"Clean Sheet Rate\"},\n      {value: \"totaldistancecovered\",label:\"Distance\"},\n      {value: \"distancepergame\",label:\"Distance Per Game\"},\n      {value: \"hattrickcount\",label:\"Hattricks\"},\n      {value: \"unstoppablecount\",label:\"4 goals\"},\n      {value: \"dominatingcount\",label:\"5 goals\"}\n    ];\n    let selected = this.state.selectedStat;\n\n    return(\n      <Dropdown placeholderClassName='DropDownPlaceholder' controlClassName='DropDownControl' menuClassName='DropDownMenu' options={options} onChange={this.onSelect} value={selected} placeholder=\"Select an option\" />\n\n    )\n  }\n\n  onSelect(option){\n\n\n\n    this.state.stats.sort(this.sortByProperty(option.value));\n    this.state.selectedStat = option;\n    this.setState({stats: this.state.stats});\n  }\n\n\n\n  renderChatLog(file,i){\n    let name = file.substring(0,file.length - 6);\n    return(\n      <a href={name} target=\"_blank\">\n      <div className=\"Container Click\">\n        <div className=\"SmallDigitSmall\">\n        {name}\n        </div>\n      </div>\n      </a>\n    )\n  }\n\n  componentDidMount(){\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n  }\n\n  updateDimensions(){\n     this.setState({width: window.innerWidth, height: window.innerHeight});\n  }\n\n  render(){\n    let fixedHeight = this.state.height - 270;\n    if(this.state.height < 650){\n      fixedHeight = \"500px\";\n    }\n\n    let hideplayerstatsstring = \"Show players with <50 games\";\n    if(!this.state.hideplayerstats){\n      hideplayerstatsstring = \"Hide players with <50 games\";\n    }\n\n\n\n    return (\n      <div>\n      <Switch>\n        <Route exact path={'/'}>\n          <div className=\"App\">\n\n\n\n            <header className=\"Header\">\n              <div className=\"Title\">/hax/</div>\n\n              <a\n                className=\"RoomLink\"\n                href={this.state.curlink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <div className=\"LinkContainer\">\n                  {this.state.curlink}\n                </div>\n              </a>\n              <div className=\"InfoPlainTitle\">or</div>\n              <a\n                className=\"PlayLink\"\n                href=\"https://neinhold.github.io/play\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <div className=\"LinkContainer Small\">\n                  neinhold.github.io/play\n                </div>\n              </a>\n            </header>\n            <div className=\"Row\" style={{ 'height': fixedHeight }}>\n            <div className=\"Column\">\n            <div className=\"ColumnTitle\">\n            Chatlogs\n            </div>\n            <PerfectScrollbar>\n              <div className=\"Column Chatlog\">\n\n                {this.state.chatLogs.map((file, i) => this.renderChatLog(file, i))}\n              </div>\n              </PerfectScrollbar>\n              </div>\n              <div className=\"Column\">\n              <div className=\"ColumnTitle\">\n              Stats\n              </div>\n\n\n              {this.renderDropDown()}\n              <PerfectScrollbar>\n              <div className=\"Column Stats\">\n\n                {this.state.stats.map((player, i) => this.renderPlayerStats(player, i))}\n                <div onClick={() => this.setState({hideplayerstats: !this.state.hideplayerstats})} className=\"Container Inline Click\">\n                <div className=\"SmallDigitSmall\">{hideplayerstatsstring}</div>\n                </div>\n              </div>\n              </PerfectScrollbar>\n              </div>\n              <div className=\"Column\">\n              <div className=\"ColumnTitle\">\n              Replays\n              </div>\n              <PerfectScrollbar>\n              <div className=\"Column Replays\">\n\n                {this.state.replayInfo.map((replay, i) => renderReplayInfo(replay, i, this.state.replaydisplaycount))}\n                <div onClick={() => this.setState({replaydisplaycount: this.state.replaydisplaycount+50})} className=\"Container Inline Click\">\n                <div className=\"SmallDigitSmall\">Show next 50 Replays</div>\n                </div>\n\n\n              </div>\n\n              </PerfectScrollbar>\n              </div>\n            </div>\n\n          </div>\n\n        </Route>\n        <Route exact path='/:id' component={(props) => <IdHandler id={props.match.params} curlink={this.state.curlink} replayInfo={this.state.replayInfo} stats={this.state.stats}/>\n             /*window.location = replayUrl  + this.padWithZeros(props.match.params.id) + \".hbr2\";\n             return null;*/\n        }/>\n        <Route path='/d/:id' component={(props) => {\n             window.location = replaySourceUrl  + padWithZeros(props.match.params.id) + \".hbr2\";\n             return null;\n        }}/>\n\n      </Switch>\n\n      </div>\n    );\n\n  }\n}\n\n\n\nexport class IdHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      chatLog: [],\n      replayInfo: [],\n      stats: [],\n      isHelp: false,\n\n      analyticsstats: {}\n    }\n\n    let id = props.id.id;\n    let replayInfo = props.replayInfo;\n    this.state.replayInfo = replayInfo;\n    this.state.stats = props.stats;\n\n    if(!isNaN(id)){\n      let replayTitle = padWithZeros(id);\n      window.location = replayUrl  + replayTitle + \".hbr2\";\n      return null;\n    }\n    else if(id == \"play\"){\n      if(props.curlink){\n        window.location = props.curlink;\n        return null;\n      }\n    }\n    else if(id == \"help\"){\n      this.state.isHelp = true;\n    }\n    else{\n      let url = serverUrl + \"chatlogs/\" + id + \".jsonl\";\n      axios.get(url)\n      .then(response => {\n        let jsonArray = [response.data];\n        if(typeof response.data === 'string'){\n          jsonArray = parseJsonl(response.data);\n        }\n        this.state.chatLog = jsonArray;\n        this.setState({chatLog: this.state.chatLog});\n      });\n\n/*\n      let urls = [\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\"];\n      for(var i = 0; i < urls.length; i++){\n        let url = serverUrl + \"chatlogs/\" + urls[i] + \".jsonl\";\n        axios.get(url)\n        .then(response => {\n          let jsonArray = [response.data];\n          if(typeof response.data === 'string'){\n            jsonArray = parseJsonl(response.data);\n          }\n          this.analyzeChatLog(jsonArray);\n          this.fixStats(i);\n        });\n      }*/\n    }\n\n  }\n\n\n  analyzeChatLog(log){\n\n    //console.log(log);\n    //let stats = {};\n\n    let curStats = {};\n    for(var i = 0; i < log.length; i++){\n      let message = log[i];\n\n      if(message.type == 0){\n        if(!(message.auth in this.state.analyticsstats)){\n          this.state.analyticsstats[message.auth] = {\n            names: [message.name],\n            goals: 0,\n            assists: 0,\n            wins: 0,\n            matches: 0,\n            losses: 0\n          };\n        }\n        else{\n          this.state.analyticsstats[message.auth].names.push(message.name);\n        }\n      }\n    }\n\n    for(var i = 0; i < log.length; i++){\n      let message = log[i];\n\n      if(message.type == 2){\n        if(message.message.includes(\"GOAL\") && !message.message.includes(\"OWN GOAL\")){\n          //console.log(message.message);\n          let i1 = message.message.indexOf(\"! \");\n          let i2 = message.message.indexOf(\" scores\");\n          let name = message.message.substr(i1+2,i2-i1-2);\n\n          if(!(name in curStats)){\n            curStats[name] = {\n              goals: 0,\n              assists: 0,\n            };\n          }\n          curStats[name].goals += 1;\n\n          let a1 = message.message.indexOf(\"assist from \");\n          if(a1 != -1){\n            let assistname = message.message.substr(a1+12);\n            assistname = assistname.substr(0, assistname.length-1);\n            //console.log(assistname);\n            if(!(assistname in curStats)){\n              curStats[assistname] = {\n                goals: 0,\n                assists: 0,\n              };\n            }\n            curStats[assistname].assists += 1;\n          }\n\n\n\n\n\n        }\n      }\n      if(message.type == 3){\n        let info = this.getReplayInfo(message.id);\n        if(!info){break;}\n\n        if(!(\"redplayers\" in info)){\n          info.redplayers = [];\n        }\n        if(!(\"blueplayers\" in info)){\n          info.blueplayers = [];\n        }\n\n        //console.log(info);\n        //console.log(info.scorered + \" - \" + info.scoreblue);\n        //console.log(info.redplayers.length + \" | \" + info.blueplayers.length);\n        if(info.redplayers.length + info.blueplayers.length < 6){\n          for(var name in curStats){\n\n            let auth = this.checkForAuth(this.state.analyticsstats, name);\n            if(auth != null){\n            this.state.analyticsstats[auth].goals += curStats[name].goals;\n            this.state.analyticsstats[auth].assists += curStats[name].assists;\n            }\n          }\n\n          if(info.scorered > info.scoreblue){\n            for(var ir = 0; ir < info.redplayers.length; ir++){\n              let auth = this.checkForAuth(this.state.analyticsstats, info.redplayers[ir]);\n              if(auth != null){\n              this.state.analyticsstats[auth].wins += 1;\n              this.state.analyticsstats[auth].matches += 1;\n              }\n            }\n            for(var ib = 0; ib < info.blueplayers.length; ib++){\n              let auth = this.checkForAuth(this.state.analyticsstats, info.blueplayers[ib]);\n              if(auth != null){\n              this.state.analyticsstats[auth].losses += 1;\n              this.state.analyticsstats[auth].matches += 1;\n              }\n            }\n          }\n          if(info.scorered < info.scoreblue){\n            for(var ir = 0; ir < info.redplayers.length; ir++){\n              let auth = this.checkForAuth(this.state.analyticsstats, info.redplayers[ir]);\n              if(auth != null){\n              this.state.analyticsstats[auth].losses += 1;\n              this.state.analyticsstats[auth].matches += 1;\n              }\n            }\n            for(var ib = 0; ib < info.blueplayers.length; ib++){\n              let auth = this.checkForAuth(this.state.analyticsstats, info.blueplayers[ib]);\n              if(auth != null){\n              this.state.analyticsstats[auth].wins += 1;\n              this.state.analyticsstats[auth].matches += 1;\n              }\n            }\n          }\n\n\n\n        }\n        curStats = {};\n      }\n    }\n\n    //let array = Object.keys(this.state.analyticsstats);\n    //array.sort(this.sortByProperty(\"goals\"));\n    console.log(\"STATS\");\n    console.log(this.state.analyticsstats);\n  }\n\n  fixStats(i){\n    let stats =[... this.state.stats];\n    console.log(\"FIX STATS - \" + i);\n    for (var auth in this.state.analyticsstats) {\n      for(var i = 0; i < stats.length; i++){\n        let player = stats[i];\n        if(player.auth == auth){\n          stats[i].newtotalscorecount = parseInt(stats[i].totalscorecount) - this.state.analyticsstats[auth].goals;\n          stats[i].newtotalwincount = parseInt(stats[i].totalwincount) - this.state.analyticsstats[auth].wins;\n          stats[i].newtotallosscount = parseInt(stats[i].totallosscount) - this.state.analyticsstats[auth].losses;\n          stats[i].newtotalmatchcount = parseInt(stats[i].totalmatchcount) - this.state.analyticsstats[auth].matches;\n          stats[i].newtotalassistcount = parseInt(stats[i].totalassistcount) - this.state.analyticsstats[auth].assists;\n\n        }\n      }\n    }\n    let newstats = [];\n    let newI = 0;\n    for(var i = 0; i < stats.length; i++){\n      if(stats[i].newtotalmatchcount && stats[i].newtotalmatchcount > 0){\n\n        newstats.push({\n          auth: stats[i].auth,\n          lastname: stats[i].lastname,\n          totalplaytime: stats[i].totalplaytime\n        });\n        newstats[newI].totalscorecount = stats[i].newtotalscorecount;\n        newstats[newI].totalwincount = stats[i].newtotalwincount;\n        newstats[newI].totallosscount = stats[i].newtotallosscount;\n        newstats[newI].totalmatchcount = stats[i].newtotalmatchcount;\n        newstats[newI].totalassistcount = stats[i].newtotalassistcount;\n        newI += 1;\n\n      }\n      /*delete stats[i].newtotalscorecount;\n      delete stats[i].newtotalwincount;\n      delete stats[i].newtotallosscount;\n      delete stats[i].newtotalmatchcount;\n      delete stats[i].newtotalassistcount;*/\n\n    }\n    console.log(newstats);\n    console.log(\"---------------\");\n    let string = this.convertToLogDataStats(newstats);\n    this.logStatsToFile(string);\n    console.log(string);\n  }\n\n  convertToLogDataStats(stats){\n    let data = \"\";\n    for(var index in stats) {\n      if(data != \"\"){\n        data = data + \"&\";\n      }\n      data = data + \"auth=\"+stats[index].auth;\n\n      for (var key in stats[index]) {\n        if(key != \"auth\" && key != \"jointime\" && key !=\"isafk\" && key != \"scorecount\" && key != \"assistcount\" && key != \"heatmap\"){\n          let keyString = \"&\" + key.toLowerCase() + \"=\" + stats[index][key];\n          data = data + keyString;\n        }\n      }\n      let keyString = \"&\" + \"heatmap\" + \"=0\";\n      data = data + keyString;\n\n    }\n\n    return data;\n  }\n\n  logStatsToFile(data){\n    let xhr = new XMLHttpRequest();\n    //room.sendAnnouncement(\"LOGGING TO FILE: \" + name);\n\n    xhr.onreadystatechange = function() {\n        if (xhr.readyState == XMLHttpRequest.DONE) {\n            //room.sendAnnouncement(xhr.responseText);\n\n        }\n    };\n\n    xhr.open(\"POST\", \"https://lively-scene-db1a.neinhold.workers.dev/?http://85.159.209.166.nip.io/data/\" + \"stats.jsonl\", true);\n    xhr.setRequestHeader('Content-Type',  'application/x-www-form-urlencoded');\n    xhr.setRequestHeader('auth',  'AUTH');\n    xhr.setRequestHeader('type',  'STATS');\n    xhr.send(data);\n  }\n\n\n  checkForKey(dict, key){\n    if(!(key in dict)){\n      dict[key] = {\n        goals: 0,\n        assists: 0,\n        matches: 0,\n        wins: 0,\n        losses: 0\n      };\n    }\n  }\n\n  checkForAuth(dict, key){\n    for (var auth in this.state.analyticsstats) {\n      for(var i = 0; i < this.state.analyticsstats[auth].names.length; i++){\n        if(this.state.analyticsstats[auth].names[i] == key){\n          return auth;\n        }\n      }\n    }\n    return null;\n    /*if(!(key in dict)){\n      dict[key] = {\n        goals: 0,\n        assists: 0,\n        matches: 0,\n        wins: 0,\n        losses: 0\n      };\n    }*/\n  }\n\n\n  getReplayInfo(id){\n    if(this.state.replayInfo){\n      for(var i = 0; i < this.state.replayInfo.length; i++){\n        let curId = this.state.replayInfo[i].id;\n        if(id == curId){\n          return this.state.replayInfo[i];\n        }\n      }\n    }\n  }\n\n  renderMessage(message){\n\n    let chatString = \"\";\n    let className = \"ChatMessage\";\n    let date = new Date(parseInt(message.timeStamp));\n    let dateString = date.toLocaleString();\n    if(message.type == 0){\n      chatString += message.name + \": \";\n    }\n    if(message.type == 1){\n      className = \"ChatMessageHost\";\n    }\n    if(message.type == 2){\n      className = \"ChatAnnouncement\";\n    }\n    if(message.type == 3){\n      className = \"ChatReplay\"\n      chatString = \"Replay Match #\" + parseInt(message.id,10);\n      let replayInfo = this.getReplayInfo(message.id);\n      return(\n        <div>\n          <div className=\"ChatTimeStamp\">\n            {dateString}\n          </div>\n          <div className={className}>\n            {chatString}\n            {(replayInfo) ? renderReplayInfo(replayInfo, -1, -1) : <div/>}\n          </div>\n        </div>\n\n      )\n    }\n    else{\n\n      chatString += message.message;\n\n      return(\n        <div>\n          <div className=\"ChatTimeStamp\">\n            {dateString}\n          </div>\n          <div className={className}>\n            {chatString}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render(){\n    if(!this.state.isHelp){\n      return (\n        <div className=\"ChatContainer\">\n          {this.state.chatLog.map((message, i) => this.renderMessage(message, i))}\n        </div>\n      );\n    }else{\n      return(\n        <Help/>\n      );\n    }\n\n  }\n}\n\n\n\nexport class Help extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      commands: []\n    }\n\n    this.state.commands = [\n      {\n        title: \"afk\",\n        syntax: [\"i'm afk\", \"im afk\", \"set me afk\"],\n        info: \"Sets you as away from keyboard, which prevents you from being assigned to a team.\",\n      },\n      {\n        syntax: [\"set PLAYERNAME afk\", \"PLAYERNAME is afk\"],\n        info: \"Sets other player as afk.\",\n        admin: true\n      },\n      {\n        syntax: [\"i'm back\", \"im back\", \"back\", \"not afk\", \"no longer afk\"],\n        info: \"Clears your afk status.\",\n      },\n\n      {\n        title: \"stats\",\n        syntax: [\"how long have i been playing\", \"whats my playtime\", \"for how long am i playing\", \"how long has PLAYERNAME been playing\"],\n        info: \"Prints your current and total playtime. \\n If PLAYERNAME is specified, prints the values of the specified player.\",\n      },\n      {\n        syntax: [\"how many goals\", \"how often have i scored\", \"whats my goal count\", \"how many goals has PLAYERNAME scored\"],\n        info: \"Prints your total amount of goals scored and your goals per game average. \\n If PLAYERNAME is specified, prints the values of the specified player.\"\n      },\n      {\n        syntax: [\"how many assists\", \"assist count\", \"how many assists does PLAYERNAME have\"],\n        info: \"Prints your total amount of assists and your assists per game average. \\n If PLAYERNAME is specified, prints the values of the specified player.\",\n      },\n      {\n        syntax: [\"how many matches\", \"how many games\", \"match count\", \"how often have i played\", \"how many wins\", \"how many games has PLAYERNAME played\"],\n        info: \"Prints your total amount of games played and your winrate. \\n If PLAYERNAME is specified, prints the values of the specified player.\",\n      },\n      {\n        syntax: [\"how many own goals\", \"how many own goals has PLAYERNAME scored\"],\n        info: \"Prints your total amount of own goals and your own goals per game average. \\n If PLAYERNAME is specified, prints the values of the specified player.\",\n      },\n      {\n        syntax: [\"how many 1v1s\", \"how many 1v1s has PLAYERNAME played\"],\n        info: \"Prints your total amount of 1v1s played and your winrate. \\n If PLAYERNAME is specified, prints the values of the specified player.\",\n      },\n      {\n        syntax: [\"how many hattricks\", \"how many hattricks has PLAYERNAME scored\"],\n        info: \"Prints your total amount of hattricks as well as the amount of times you scored 4 or 5 goals in a single game. \\n If PLAYERNAME is specified, prints the values of the specified player.\",\n      },\n      {\n        syntax: [\"how often was i gk\", \"how often was i keeper\", \"how many times have i been gk\", \"how many clean sheets\", \"how often has PLAYERNAME been gk\"],\n        info: \"Prints your total amount of games played as gk, as well as your goals conceded as gk and your number of clean sheets. \\n If PLAYERNAME is specified, prints the values of the specified player.\",\n      },\n      {\n        syntax: [\"how far have i run\", \"what distance have i covered\", \"how far has PLAYERNAME run\"],\n        info: \"Prints your total distance covered, as well as your average distance covered per game. \\n If PLAYERNAME is specified, prints the values of the specified player.\",\n      },\n      {\n        syntax: [\"what is my rating\", \"PLAYERNAME rating\"],\n        info: \"Prints your overall, offense and defense rating. \\n If PLAYERNAME is specified, prints the values of the specified player.\",\n      },\n      {\n        syntax: [\"what is your prediction accuracy\", \"how many predictions\"],\n        info: \"Prints the amount of games NeinholdBot has predicted the result of, as well has his accuracy in predicting the winner and exact results.\",\n      },\n\n      {\n        title: \"maps\",\n        syntax: [\"change map to MAPNAME\", \"switch map to MAPNAME\", \"set map MAPNAME\"],\n        info: \"Changes the map to any of the default maps. Only works when no game is underway.\",\n        admin: true\n      },\n\n      {\n        title: \"auto modes\",\n        syntax: [\"auto mode\", \"auto-mode\", \"automode\"],\n        info: \"Toggles auto mode, which will automatically assign players up to 4v4.\",\n        admin: true\n      },\n      {\n        syntax: [\"captains mode\", \"captains-mode\", \"captainsmode\", \"captain mode\"],\n        info: \"Toggles captains mode, which will assign a captain to each team and prompt them to pick players.\",\n        admin: true\n      },\n      {\n        syntax: [\"i want to be captain\"],\n        info: \"Makes you eligible to be assigned as captain if you have been blacklisted. You are eligible by default.\"\n      },\n\n      {\n        title: \"game modes and modifiers\",\n        syntax: [\"MODENAME\"],\n        info: \"Enables the respective mode. Multiple modes can be active at once and will trigger in the order listed here.\\n Values modified by modes are always overridden by their respective modifiers.\\n\\nmessiball: sets all playersizes to the value of MESSISIZE\\nameriball: sets all playersizes to the value of AMERISIZE\\ngkball: sets one player per team to AMERISIZE\\nmixedball: sets one player per team to AMERISIZE and one to MESSISIZE\\nrandomball: randomizes the size of each player\\nbumpball: makes all players kickable, meaning you can press X to bump them around\",\n        admin: true\n      },\n      {\n        syntax: [\"set messisize to VALUE\", \"set amerisize to VALUE\"],\n        info: \"Changes the value of MESSISIZE or AMERISIZE, which define the player sizes in game modes. You shouldn't really change these values. They will not be reset when modifiers are reset.\",\n        admin: true\n      },\n      {\n        syntax: [\"MODIFIERNAME to VALUE\", \"MODIFIERNAME VALUE\"],\n        info: \"Sets the value of the respective modifier. Multiple modifiers can be set in a single command.\\n\\nballsize: sets the ballsize to an integer value. default is 10.\\nplayersize: sets the size of each player to an integer value. default is 15.\\ndamping: sets the damping of the ball to a float value that must lie between 0.0 and 1.0. a value of 1 means the ball will not lose momentum. default is 0.99.\\nbounce: sets the bounce of the ball to a float value between 0.0 and 3.0. a value of 1 means the ball bounces off a surface with as much momentum as it hit that surface. default is 0.5.\\nmass: sets the mass of the ball to a float value between 0.0 and 5.0. mass is inverse, so a higher value means a lighter ball and thus stronger kicks. default is 1.0.\",\n        admin: true\n      },\n      {\n        syntax: [\"reset\"],\n        info: \"Resets all game modes and modifiers. If a game is underway you may need to stop it or score a goal in order for the default values to be applied.\",\n        admin: true\n      },\n      {\n        syntax: [\"what modifiers are active\", \"tell me the current modifiers\", \"what modes are active\", \"what parameters have been changed\"],\n        info: \"Prints a list of all currently active game modes and modifiers.\"\n      },\n      {\n        syntax: [\"list modifiers\", \"list modes\", \"list parameters\"],\n        info: \"Prints a list of all game modes and modifiers that can be set.\"\n      },\n\n      {\n        title: \"native command overrides\",\n        syntax: [\"!avatar AVATARSTRING\", \"!avatar\"],\n        info: \"This will set an animated avatar that is cycled through character by character (including spaces). This animated avatar is separate from the one set with the native /avatar command and will alternate with your normal avatar with a frequency of AVATARFREQUENCY.\",\n      },\n      {\n        syntax: [\"!avatarfreq AVATARFREQUENCY\"],\n        info: \"This will set the AVATARFREQUENCY in seconds which determines the interval in which your animated avatar is shown. For example, if you set this to 10, your normal avatar will be shown for 10 seconds before cycling through each character of your AVATARSTRING, then show your normal avatar for another 10 seconds and so on. Setting this to 0 means your normal avatar won't be shown at all. Default value is 4.\",\n      },\n      {\n        syntax: [\"!colors TEAMNAME ANGLE TEXTCOLOR COLOR1 COLOR2 COLOR3\"],\n        info: \"Sets the team colors just like the native /colors command does. Just replace the / with a !. Setting it this way allows for some animations (for example when a goal is scored), if they are enabled.\",\n        admin: true\n      },\n\n    ];\n\n\n  }\n\n  renderSyntax(syntax, i){\n    return(\n      <div className=\"CommandSyntax\">\n        {'\"'+syntax+'\"'}\n      </div>\n    );\n  }\n\n  renderCommand(command,i ){\n\n    let titleClass = \"\";\n    if(command.title){\n      titleClass = \"CommandTitle\";\n    }\n    let admin = <div></div>;\n    if(command.admin){\n      admin = <div className=\"Admin\">Admins only</div>;\n    }\n\n    return (\n      <div className=\"CommandContainer\">\n        <div className={titleClass}>\n          {command.title}\n        </div>\n        {admin}\n        <div className=\"LeftTitle\">\n          Syntax:\n        </div>\n        {command.syntax.map((syntax, i) => this.renderSyntax(syntax, i))}\n        <div className=\"CommandInfo\">\n          {command.info}\n        </div>\n      </div>\n    );\n\n  }\n\n\n  render(){\n\n    return (\n      <div className=\"ChatContainer\">\n\n        <div className=\"BigDigit\">\n          Link\n        </div>\n        <hr/>\n        <div className=\"CommandContainer\">\n        <div className=\"CommandInfo\">\n          The room link may sometimes change, as the server must be restarted in order for NeinholdBot to be updated. In that case, you can always find the latest link at\n        </div>\n        <a href=\"https://neinhold.github.io\"><div className=\"CommandSyntax\">\n          neinhold.github.io\n        </div></a>\n        <div className=\"CommandInfo\">\n        <br/>\n          You can also simply go to\n        </div>\n        <a href=\"https://neinhold.github.io/play\"><div className=\"CommandSyntax\">\n          neinhold.github.io/play\n        </div></a>\n        <div className=\"CommandInfo\">\n          which will forward you to the latest room link automatically.\n        </div>\n        </div>\n\n        <br/><br/>\n        <div className=\"BigDigit\">\n          Commands\n        </div>\n        <hr/>\n        <div className=\"CommandContainer\">\n          <div className=\"CommandInfo\">\n            All commands (with the exception of native command overrides) must start with\n          </div>\n          <div className=\"CommandSyntax\">\n            Hey NeinholdBot\n          </div>\n          <div className=\"CommandInfo\">\n            The syntax after that is fairly forgiving and will accept different wording.\n            <br/><br/>\n             If parameters like MAPNAME or MODIFIERNAME are specified, they must be an exact match of the target string. PLAYERNAME needs only be a unique match, see Captains mode section for an explanation of what that means.\n          </div>\n        </div>\n        {this.state.commands.map((command, i) => this.renderCommand(command, i))}\n\n        <br/><br/>\n        <div className=\"BigDigit\">\n          Captains mode for brainlets\n        </div>\n        <hr/>\n        <div className=\"CommandContainer\">\n        <div className=\"CommandInfo\">\n          When you are assigned as captain of a team, you have several simple options to pick your team that are a much faster process than crying in chat about captains mode being active until an admin removes you from the game. These options are:\n        </div>\n        <div className=\"CommandSyntax\">\n          Typing @\n        </div>\n        <div className=\"CommandInfo\">\n          It literally doesn't get any more brainlet-proof than this. Type <b>@</b> in the chatbox, and a list of all players will pop up. You can navigate that list with your arrow keys. Once you have selected a player you want to pick, press <b>TAB</b> and then <b>ENTER</b> to pick that player.\n        </div>\n        <div className=\"CommandSyntax\">\n          Typing the name of a player\n        </div>\n        <div className=\"CommandInfo\">\n          Simple. This must not even be an exact match of the players name. Any string of a minimum length of 3 that is a substring of a single players name will be accepted.<br/>For example, if there is a player called <b>Abu Al-Britani</b> and you simply type <b>abu</b> in the chat, then unless there is another player whose name contains <b>abu</b> in the room, <b>Abu Al-Britani</b> will be picked.\n        </div>\n        <div className=\"CommandSyntax\">\n          Typing a number\n        </div>\n        <div className=\"CommandInfo\">\n          Type the position of the player you want to pick in the spectator list.\n        </div>\n        <div className=\"CommandSyntax\">\n          Typing #\n        </div>\n        <div className=\"CommandInfo\">\n          Works the same way <b>@</b> does, except it uses player IDs instead of names.\n        </div>\n        <div className=\"CommandSyntax\">\n          Typing random\n        </div>\n        <div className=\"CommandInfo\">\n          The zoomer option. This will automatically pick a team for you, you only need to type this once. However, typing <b>random</b> will immediately blacklist you from being selected as captain in the future. You can undo that blacklisting by telling NeinholdBot, see commands above.\n        </div>\n        </div>\n\n      </div>\n    );\n\n  }\n}\n\nexport function  parseJsonl(jsonl){\n    let rawLines = jsonl;\n    let lineArray = rawLines.split('\\n');\n    lineArray = lineArray.slice(0, lineArray.length-1);\n\n    let jsonArray = [];\n    for(var i = 0; i < lineArray.length; i++){\n      let json = JSON.parse(lineArray[i]);\n      jsonArray.push(json);\n    }\n    return jsonArray;\n  }\n\n  export function sToString(s){\n    var totalSeconds =  s;\n    var minutes = Math.floor(totalSeconds / 60);\n    var seconds = totalSeconds - (minutes * 60);\n    var timeString = minutes + \"m\" + parseInt(seconds) + \"s\";\n    return timeString;\n  }\n\n  export function padWithZeros(num) {\n    var s = \"000000000\" + num;\n    return s.substr(s.length-8);\n  }\n\n  export function renderModifiers(replay){\n      if(replay.modifiers != \"No modifiers active\"){\n        return(\n          <div className=\"SubTitle\">\n          {replay.modifiers}\n          </div>\n        )\n      }\n  }\n\n\n  export function renderReplayInfo(replay,i,displaycount){\n    if(i < displaycount || displaycount == -1){\n      return(\n        <ReplayInfo replay={replay} i={i}/>\n      )\n    }\n\n  }\n\n\n  export class ReplayInfo extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state={\n        curTab: 0,\n        heatmaps: null,\n        blueHeatMap: null,\n        maxValue: 1,\n        isLoaded: false,\n      }\n\n\n\n\n    }\n\n    loadHeatmap(){\n      let url = serverUrl + \"heatmaps/replays/\" + this.props.replay.id + \".json\";\n      axios.get(url)\n      .then(response => {\n        let jsonArray = [response.data];\n\n        jsonArray = jsonArray[0];\n\n\n        let data = [];\n        let maxValue = 1;\n        for(var i = 0; i < jsonArray.length; i++){\n          data.push({\n            name: jsonArray[i].name,\n            team: jsonArray[i].team,\n            heatmap: [],\n            visible: true\n          });\n          for(var x = 0; x < jsonArray[i].heatmap.length; x++){\n            for(var y = 0; y < jsonArray[i].heatmap[x].length; y++){\n              let xCoord = x * 6.5;\n              let yCoord = y * 3.7666;\n              if(jsonArray[i].team == 2){\n                xCoord = (40-x) * 6.5;\n                yCoord = (30-y) * 3.7666;\n              }\n              let dataPoint = {\n                x: xCoord,\n                y: yCoord,\n                value: jsonArray[i].heatmap[x][y]+1\n                //value: Math.min(jsonArray[i].heatmap[x][y] +1, 3)\n              }\n              data[i].heatmap.push(dataPoint);\n              if(dataPoint.value > maxValue){\n                maxValue = dataPoint.value;\n              }\n            }\n          }\n        }\n        this.state.heatmaps = data;\n        this.state.maxValue = maxValue;\n        this.setState({heatmaps: this.state.heatmaps});\n        //console.log(data);\n\n\n      });\n    }\n\n    renderTabs(tabs){\n      let tabClasses = [\"Tab\", \"Tab\"];\n      tabClasses[this.state.curTab] += \" Selected\";\n\n      if(tabs){\n        return(\n          <div>\n            <div onClick={() => this.setState({curTab: 0, isLoaded: false})} className={tabClasses[0]}>\n              Info\n            </div>\n            <div onClick={() => this.setState({curTab: 1, isLoaded: false})} className={tabClasses[1]}>\n              Heatmap\n            </div>\n          </div>\n        )\n      }else{\n        return(<div/>)\n      }\n    }\n\n    generateHeatMap(index){\n      let id = this.props.replay.id;\n      let heatmap = this.state.heatmaps[index].heatmap;\n\n\n      let gradient = {\n          '.5': \"rgb(232, 102, 102)\",\n          '.8': \"rgb(232, 60, 161)\",\n          '.95':\"rgb(255, 0, 234)\"\n        };\n      if(this.state.heatmaps[index].team == 2){\n        gradient = {\n          '.5': \"rgb(32, 85, 153)\",\n          '.8': \"rgb(63, 218, 232)\",\n          '.95':\"rgb(0, 255, 191)\"\n        }\n      }\n\n\n\n      var heatmapInstance = h337.create({\n        container: document.querySelector('.Heatmap'+id+\"_\"+index),\n        radius: 8,\n        maxOpacity: .5,\n        minOpacity: 0,\n        blur: .75,\n\n        gradient: gradient\n      });\n      var data = {\n        min: 1,\n        max: 8,\n        data: heatmap\n      };\n      heatmapInstance.setData(data);\n    }\n\n    toggleHeatMap(index){\n\n      let start = index;\n      let range = index+1;\n      let team = 0;\n      if(index == \"red\" || index == \"blue\"){\n        start = 0;\n        range = this.state.heatmaps.length;\n        team = 1;\n      }\n      if(index == \"blue\"){\n        team = 2;\n      }\n\n      let curVisibility = null;\n\n      for(var i = start; i < range; i++){\n        if(this.state.heatmaps[i].team == team || team == 0){\n          let container = document.querySelector('.Heatmap'+this.props.replay.id+\"_\"+i);\n          if(curVisibility == null){\n            curVisibility = container.style.visibility;\n          }\n          if(curVisibility == \"hidden\"){\n            container.style.visibility='visible';\n            this.state.heatmaps[i].visible = true;\n            this.setState({curTab: this.state.curTab});\n          }else{\n            container.style.visibility='hidden';\n            this.state.heatmaps[i].visible = false;\n            this.setState({curTab: this.state.curTab});\n          }\n        }\n      }\n    }\n\n\n    renderHeatmap(heatmap,i){\n\n\n\n\n      return(\n        <div className = \"HeatmapContainer\">\n          <div style={{ 'height': 133}} className={\"Heatmap\" + this.props.replay.id + \"_\" + i}>\n          </div>\n        </div>\n      )\n    }\n\n    renderToggle(team, i){\n      let color = \"#888888\";\n      if(this.state.heatmaps[i].visible){\n        color = \"#FFFFFF\";\n      }\n\n      if(this.state.heatmaps[i].team == team){\n        return(\n          <div  style={{ 'color':color }}  className=\"TogglePlayer\" onClick={()=>this.toggleHeatMap(i)}>{this.state.heatmaps[i].name}</div>\n\n        )\n      }\n    }\n\n    checkForGk(name){\n      if(this.props.replay.gks.includes(name)){\n        return \"(GK) \" + name;\n      }else{\n        return name;\n      }\n    }\n\n\n    render(){\n      let containerName = \"Container\";\n      if(this.props.i == -1){\n        containerName = \"ContainerChat\";\n      }\n      let tabs = false;\n      if(this.props.replay.stadium == \"Big\"){\n        tabs = true;\n      }\n\n      if(this.state.curTab == 0){\n        return(\n\n          <div  className={containerName + \" Click\"}>\n            {this.renderTabs(tabs)}\n            <a href={replayUrl + this.props.replay.id + \".hbr2\"} target=\"_blank\">\n            <div className=\"SmallDigitSmall\">\n            {parseInt(this.props.replay.id,10)}\n            </div>\n            <div className=\"InfoPlainTitle\">\n            {sToString(this.props.replay.duration)}\n            </div>\n            <div className=\"SubTitleOffset\">\n            {this.props.replay.stadium}\n            </div>\n            {renderModifiers(this.props.replay)}\n            <div className=\"PlayerStatsGames\">\n              <div className=\"InfoBoxWide\">\n                <div className=\"InfoPlainTitle\">\n                Red\n                </div>\n                <div className=\"SmallDigit\">\n                {this.props.replay.scorered}\n                </div>\n                <hr/>\n              </div>\n              <div className=\"InfoBoxWide\">\n                <div className=\"InfoPlainTitle\">\n                Blue\n                </div>\n                <div className=\"SmallDigit\">\n                {this.props.replay.scoreblue}\n                </div>\n                <hr/>\n              </div>\n              <div className=\"PlayerStatsGames\">\n                <div className=\"InfoBoxWide\">\n                  <div className=\"SubTitle\">\n                  {this.props.replay.redplayers.map(function(player, i){\n                    return <div className=\"SubTitleOffset\">\n                    {this.checkForGk(player)}\n                    </div>\n                  }, this)}\n                  </div>\n                </div>\n                <div className=\"InfoBoxWide\">\n                  <div className=\"SubTitle\">\n                  {this.props.replay.blueplayers.map(function(player, i){\n                    return <div className=\"SubTitleOffset\">\n                    {this.checkForGk(player)}\n                    </div>\n                  }, this)}\n                  </div>\n                </div>\n              </div>\n            </div>\n            </a>\n          </div>\n\n        )\n      }else{\n        if(this.state.heatmaps == null){\n\n          this.loadHeatmap();\n        }else if(!this.state.isLoaded){\n          let self = this;\n          setTimeout(function() {\n            for(var i = 0; i < self.state.heatmaps.length; i++){\n              self.generateHeatMap(i);\n            }\n            self.state.isLoaded = true;\n          }, 500);\n\n        }\n\n        if(this.state.heatmaps == null){\n\n          return(\n            <div  className={containerName + \" Click\"}>\n\n              {this.renderTabs(tabs)}\n              <div className={\"Subtitle\"}>\n                No Heatmap available for this match.\n              </div>\n\n            </div>\n          )\n        }else{\n\n          return(\n            <div  className={containerName + \" Click\"}>\n\n              {this.renderTabs(tabs)}\n              <div className={\"Heatmap\"}>\n                <img className=\"Stadium\" src={hax_big}/>\n                {this.state.heatmaps.map((heatmap, i) => this.renderHeatmap(heatmap, i))}\n\n              </div>\n\n              <div className=\"Toggle\" onClick={()=>this.toggleHeatMap(\"red\")}>Toggle Red</div>\n              <div className=\"Toggle\" onClick={()=>this.toggleHeatMap(\"blue\")}>Toggle Blue</div>\n              <div>\n\n              <div className=\"ToggleContainer\">\n              {this.state.heatmaps.map((heatmap, i) => this.renderToggle(1, i))}\n              </div>\n\n              <div className=\"ToggleContainer\">\n              {this.state.heatmaps.map((heatmap, i) => this.renderToggle(2, i))}\n              </div>\n              </div>\n\n            </div>\n          )\n        }\n      }\n\n    }\n  }\n\n  export default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n     <App />\n   </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}